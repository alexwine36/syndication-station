import mailgun from 'mailgun-js';

export class Mailer {
  mailer: mailgun.Mailgun;

  defaultSender: string;

  /**
   *Creates an instance of Mailer.
   * @param {string} apiKey - API Key generated by Mailgun
   * @param {string} domain - website of email sender
   * @param {string} [defaultSender] - from field in email
   * @memberof Mailer
   */
  constructor(apiKey: string, domain: string, defaultSender?: string) {
    this.mailer = mailgun({
      apiKey,
      domain
    });
    this.defaultSender = defaultSender || 'example@sample.com';
  }

  /**
   *
   *
   * @param {({
   *     from?: string;
   *     to: string | string[];
   *     cc?: string | string[];
   *     bcc?: string | string[];
   *     subject?: string;
   *     text?: string;
   *     html?: string;
   *     tags?: string[] | string;
   *   })} data
   * @returns {Promise<mailgun.messages.SendResponse>}
   * @memberof Mailer
   */
  sendMail(data: {
    from?: string;
    to: string | string[];
    cc?: string | string[];
    bcc?: string | string[];
    subject?: string;
    text?: string;
    html?: string;
    tags?: string[] | string;
  }): Promise<mailgun.messages.SendResponse> {
    const { from, tags, ...rest } = data;

    const mailgunData: mailgun.messages.SendData = {
      ...rest,
      'o:tag': tags,
      from: from || this.defaultSender,
      'o:skip-verification': 'True'
    };
    return this.mailer.messages().send(mailgunData);
  }
}
